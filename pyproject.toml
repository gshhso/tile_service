[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tile-service"
version = "0.1.0"
description = "A fast geographic tile service for serving raster data as web map tiles"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License", 
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers"
]
requires-python = ">=3.10"
dependencies = [
    "flask>=2.3.0",
    "numpy>=1.24.0",
    "xarray>=2023.1.0",
    "rioxarray>=0.14.0",
    "rasterio>=1.3.0",
    "geopandas>=0.13.0",
    "shapely>=2.0.0",
    "mercantile>=1.2.0",
    "pillow>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]
jupyter = [
    "ipyleaflet>=0.17.0",
    "jupyter>=1.0.0",
    "notebook>=6.5.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/tile_service"
Repository = "https://github.com/yourusername/tile_service"
Issues = "https://github.com/yourusername/tile_service/issues"

[tool.hatch.build.targets.wheel]
packages = ["tile_service"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["tile_service"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # tab-indentation
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=tile_service",
    "--cov-report=term-missing",
    "--cov-report=html",
] 